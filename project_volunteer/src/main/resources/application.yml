spring:
  datasource:
    url: jdbc:mysql://localhost/project_volunteer?useSSL=false
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
  mail:
    host: smtp.gmail.com
    port: 587
    username: scrummybears08@gmail.com
    password: ScrumProject0821!#
    properties.mail:
      transport.protocol: smtp
      smtp:
        auth: true
        starttls.enable: true
      debug: true
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false

security:
  roles:
    - id: 1
      role: "ROLE_VOLUNTEER"
    - id: 2
      role: "ROLE_INDIVIDUAL"
    - id: 3
      role: "ROLE_ORGANIZATION"
  minIdSum: 1
  maxIdSum: 3

# badges sentence starts with: "Congratulations! You've earned a badge for " + appending the value of the yml
badges:
  baseMessage: "Congratulations! You've earned a badge for "
  firstActivity: "completing your first activity!"
  fiveActivities: "completing 5 activities!"
  tenActivities: "completing 10 activities!"
  fiftyActivities: "completing 50 activities!"
  hundredActivities: "completing 100 activities!"
  thousandActivities: "completing 1000 activities!"
  level5: "reaching Level 5!"
  level10: "reaching Level 10!"
  level50: "reaching Level 50!"
  level100: "reaching Level 100!"

level:
  xpGainedForCompleting1Activity: 1000
  levelUpMessage: "Congratulations! You leveled up! Current Level: "


errorMessages:
  wrongRoles: "BAD_REQUEST: Roles are not set correctly"
  usernameNotFound: "BAD_REQUEST: Username doesn't exist"
  noMatchingActivityFound: "BAD_REQUEST: No matching activity was found."
  userNotAuthorizedToCompleteActivity: "BAD_REQUEST: User not authorized to complete this activity"
  activitiesNotFound: "Sorry, we found no Activities with the keyword:"
  endDateBeforeStartDate: "BAD_REQUEST: End date time must be after start date time"
  loggedInUserNotMatchingRequest: "BAD_REQUEST: Logged in user does not match the user you are trying to access"
  activityAlreadyCompleted: "BAD_REQUEST: The Activity is already completed"
  noParticipantsForActivity: "BAD_REQUEST: There are no participants for this Activity, please edit or delete the Activity."
  noMatchingDraftFound: "BAD_REQUEST: No matching draft was found."
  deleteActivityWithParticipantsNotPossible: "BAD_REQUEST: Deleting an activity with accepted volunteers not possible."
  editActivityWithApplicantsOrParticipantsNotPossible: "BAD_REQUEST: Editing Activity with applicants or accepted volunteers not possible."
  userNotInvolvedInActivity: "BAD_REQUEST: This user has no involvement in the selected activity"
  noStatusFound: "BAD_REQUEST: No status found for this activity"
  activityNotCompletedYet: "BAD_REQUEST: To post a rating the activity has to be set to completed by the organizer first"
  volunteerIsNotApplicant: "BAD_REQUEST: The volunteer you selected has not applied for this activity"
  tooManyCharactersMax800: "BAD_REQUEST: Too many characters, max. 800 allowed"
  alreadyApplied: "BAD_REQUEST: You have already applied for this activity"
  editDeletedActivityNotPossible: "BAD_REQUEST: Editing a deleted activity not possible."

constants:
  how-many-failed-logins-cause-email-warning: 5

failedLoginEmail:
  subject: Incorrect password for 5 times
  text: Was this you? Someone tried to login with an incorrect password for 5 times. Please reset your Password.
  pathToAttachment: project_volunteer/src/main/resources/Scrummy Bears Logo.jpg

activityCompletedEmail:
  subjectAndText: "Activity Completed: ;Hello ;, the Activity ; is completed, your Rating for this activity is: ;Your Feedback for this Activity is: "

activityDeletedEmail:
  subject: Activity was deleted
  text: "The following activity was deleted by its creator: "

applicationEmail:
  subject: " applied for your activity: "

ratingEmail:
  subject: You received a rating
  text: A user has submitted a rating to one of your activities.
acceptedVolunteerEmail:
  subject: Accepted for Activity
  text: "You have been accepted as the one and only for the following activity: "

rejectedVolunteerEmail:
  subject: Help no longer needed
  text: "We're happy to inform you that the following activity's creator has already received help: "


  #https://drive.google.com/file/d/1_0k1HyesHZC1R6oEZ2q3MY5FiaMhKPie/view?usp=sharing

webapptreelist:
  resourceinfos:
    - category: WebAppTree
      name: See the Web App Tree
      description: Get an overview of all possible actions for you
      uri: "/webapptree"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Account
      name: View My Account
      description: View my Account Info
      uri: "/account/{username}"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Account
      name: Edit my Account
      description: Make changes in my Account
      uri: "/account/{username}"
      restMethod: PUT
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Account
      name: Add Skills
      description: Add skills to my Account"
      uri: "/addSkill/{username}"
      restMethod: POST
      allowedRoles:
        - role: "ROLE_VOLUNTEER"

    - category: Profile
      name: View Profile as seen by others
      description: View my Profile as seen by Others
      uri: "/profile/{username}"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"

    - category: Search
      name: Search for activities as Volunteer
      description: Search for Activities as Volunteer
      uri: "/search/{text}"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"

    - category: Activities
      name: Create Activity
      description: Create a new Activity as Organizer
      uri: "/activities"
      restMethod: POST
      allowedRoles:
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Activities
      name: View all Activities
      description: View all my Activities as Organizer
      uri: "/activities"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Activities
      name: Create Draft
      description: Create a new Draft as Organizer
      uri: "/drafts"
      restMethod: POST
      allowedRoles:
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Activities
      name: View all Drafts
      description: View all my Drafts as Organizer
      uri: "/drafts"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Activities
      name: Edit Draft
      description: Edit created Draft as Organizer
      uri: "/drafts"
      restMethod: PUT
      allowedRoles:
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Activities
      name: Save Draft as Activity
      description: Save my Draft as Activity as Organizer
      uri: "/drafts/{draftId}"
      restMethod: PUT
      allowedRoles:
        - role: "ROLE_INDIVIDUAL"
        - role: "ROLE_ORGANIZATION"
    - category: Activities
      name: View all existing Activities
      description: View all Activities from the database to see what you can search for
      uri: "/volunteer/search"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
    - category: Activities
      name: View all my Activities
      description: View all my Activities as Volunteer
      uri: "/{username}/activities"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
    - category: Activities
      name: View all my completed Activities
      description: View all my completed Activities as Volunteer
      uri: "/{username}/activities/completed"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
    - category: Activities
      name: View all my pending Activities
      description: View all my pending Activities as Volunteer
      uri: "/{username}/activities/pending"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"
    - category: Activities
      name: View all my active Activities
      description: View all my active Activities as Volunteer
      uri: "/{username}/activities/active"
      restMethod: GET
      allowedRoles:
        - role: "ROLE_VOLUNTEER"